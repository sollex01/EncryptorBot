from aiogram import Bot, Dispatcher, executor
from aiogram.types import Message

from code import codding, decoding
from keyboards import main_menu

TOKEN = '–í–∞—à —Ç–æ–∫–µ–Ω'

bot = Bot(token=TOKEN)

dp = Dispatcher(bot)

current_mode = None


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
@dp.message_handler(commands=['start'])
async def start(message: Message):
    global current_mode
    current_mode = None
    await bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç –≤—ã–±–µ—Ä–∏ —Ä–µ–∂–∏–º', reply_markup=main_menu())


@dp.message_handler(commands=['help'])
async def start(message: Message):
    await bot.send_message(message.chat.id,
                           '—à–∏—Ñ—Ä–æ–≤–∫–∞ –º–µ–Ω—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞, –≤—Å–µ –∞–Ω–æ–Ω–∏–º–Ω–æ, –µ—Å—Ç—å –±–æ–ª–µ–µ 50 –≤–∏–¥–æ–≤ —à–∏—Ñ—Ä–∞.')


@dp.message_handler(lambda x: x.text == '–ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å üîí')
async def code(message: Message):
    global current_mode
    current_mode = 'code'
    await bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å')


@dp.message_handler(lambda x: x.text == '–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å üîì')
async def decode(message: Message):
    global current_mode
    current_mode = 'decode'
    await bot.send_message(message.chat.id, '–°–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å')


@dp.message_handler(content_types=['text'])
async def handle_text(message: Message):
    print(message.text)
    global current_mode
    if current_mode == 'code':
        await bot.send_message(message.chat.id, codding(message.text))
    elif current_mode == 'decode':
        await bot.send_message(message.chat.id, decoding(message.text))
    else:
        await bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∏–∑ –º–µ–Ω—é')


executor.start_polling(dp)
